[{"/home/jaea/Programacion/JS/todox/src/index.js":"1","/home/jaea/Programacion/JS/todox/src/App.js":"2","/home/jaea/Programacion/JS/todox/src/reportWebVitals.js":"3","/home/jaea/Programacion/JS/todox/src/TodoList.js":"4","/home/jaea/Programacion/JS/todox/src/Todo.js":"5","/home/jaea/Programacion/JS/todox/src/TodoCreator.js":"6","/home/jaea/Programacion/JS/todox/src/StateProvider.js":"7","/home/jaea/Programacion/JS/todox/src/firebase.js":"8","/home/jaea/Programacion/JS/todox/src/Type.js":"9","/home/jaea/Programacion/JS/todox/src/Login.js":"10"},{"size":595,"mtime":1610734389703,"results":"11","hashOfConfig":"12"},{"size":992,"mtime":1611073379805,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1608062983367,"results":"14","hashOfConfig":"12"},{"size":3291,"mtime":1611094540687,"results":"15","hashOfConfig":"12"},{"size":2904,"mtime":1611090497860,"results":"16","hashOfConfig":"12"},{"size":2392,"mtime":1611090005877,"results":"17","hashOfConfig":"12"},{"size":606,"mtime":1611093802060,"results":"18","hashOfConfig":"12"},{"size":641,"mtime":1608074193111,"results":"19","hashOfConfig":"12"},{"size":1362,"mtime":1611057460023,"results":"20","hashOfConfig":"12"},{"size":1083,"mtime":1611073440829,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"apjo2v",{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"24"},"/home/jaea/Programacion/JS/todox/src/index.js",[],["48","49"],"/home/jaea/Programacion/JS/todox/src/App.js",["50","51","52"],"import React , {useEffect} from 'react';\nimport './App.css';\nimport TodoList from './TodoList';\nimport TodoCreator from './TodoCreator';\nimport Login from './Login';\nimport {useStateValue} from './StateProvider';\nimport db from './firebase'\n\nfunction App() {\n\n const [user, todos, types, setTodos, setTypes] = useStateValue();\n\n useEffect(() => {\n        const unsubscribe = db.collection('types').onSnapshot((snapshot) => {\n\n            setTypes(snapshot.docs.map((doc) => { return {\n               ...doc.data(),\n            }}).sort());\n               console.log('types: ', types);\n            }\n\n\n        );\n\n        return () => {\n            unsubscribe();\n        }\n   }, [])\n\n  return (\n\n    <div className=\"app\">\n    { !user?(<Login/>):\n        (<div><div className='app__header'>\n            <h1>Todo App</h1>\n        </div>\n        <div className='app__body'>\n            <TodoList/>\n            <TodoCreator/>\n        </div></div>)\n    }\n\n    </div>\n\n  );\n}\n\nexport default App;\n","/home/jaea/Programacion/JS/todox/src/reportWebVitals.js",[],"/home/jaea/Programacion/JS/todox/src/TodoList.js",["53","54","55"],"/home/jaea/Programacion/JS/todox/src/Todo.js",["56"],"import React, {useState} from 'react';\nimport './Todo.css';\nimport Modal from '@material-ui/core/Modal';\nimport Button from '@material-ui/core/Button';\nimport {makeStyles} from '@material-ui/core/styles';\nimport db from './firebase';\nimport Type from './Type'\nimport {useStateValue} from './StateProvider'\n\n const useStyles = makeStyles((theme) => ({\n        paper:{\n            position: 'absolute',\n            width: 400,\n            backgroundColor: theme.palette.background.paper,\n            border: '2px solid #000',\n            boxShadow: theme.shadows[5],\n            padding: theme.spacing(2,4,3),\n        },\n\n}));\n\nfunction Todo({todo, handleCompletedTodo, types}){\n\n    const classes = useStyles();\n    const [open, setOpen] = useState(false);\n    const [inputName, setInputName] = useState(todo.name);\n    const [type, setType] = useState(todo.type);\n    const [user] = useStateValue();\n\n    const handleChange = (e) => {\n        e.preventDefault();\n        console.log('onClick', e);\n        console.log('onClick', e.target);\n        console.log('onClick', e.target.value);\n        todo.completed=!todo.completed\n        handleCompletedTodo(e.target.value);\n    }\n\n    const handleChange_ = (e) => {\n        //e.preventDefault();\n        console.log('onChange', e);\n        console.log('onChange', e.target);\n        console.log('onChange', e.target.value);\n    }\n\n    const updateTodo = () => {\n        console.log(`Updating task ${todo.id}`)\n        db.collection('todos').doc(user).collection('todos')\n            .doc(todo.id).set({name: inputName, type: type}, {merge: true})\n        setOpen(false);\n    }\n\n\n    return (\n        <div className='todo'>\n             <Modal\n                open={open}\n                onClose={() => setOpen(false)}\n            >\n                <div className={classes.paper}>\n\n                    <Type\n                        show_input={true}\n                        type={type}\n                        setType={setType}\n                        types={types}\n                        extra_types={[{name:''}]}\n                    />\n                    Task:\n                    <input\n                        type='text'\n                        placeholder={todo.name}\n                        value={inputName}\n                        onChange={(e) => setInputName(e.target.value)}\n                    />\n                    <Button onClick={updateTodo}>Update todo</Button>\n                </div>\n            </Modal>\n            <input\n                id={todo.id}\n                type=\"checkbox\"\n                name={todo.name}\n                value={todo.id}\n                onChange={handleChange}\n                checked={todo.completed}\n            />\n            <label for={todo.id}>\n                <h3 onClick={(e) => {e.preventDefault();setOpen(true)}}>{todo.name}</h3>\n            </label>\n        </div>\n    )\n}\n\n\nexport default Todo;\n","/home/jaea/Programacion/JS/todox/src/TodoCreator.js",["57","58","59","60","61"],"import React, {useState} from 'react';\nimport './TodoCreator.css';\nimport db from './firebase';\nimport firebase from 'firebase';\nimport {useStateValue} from './StateProvider'\nimport Type from './Type'\n\nfunction TodoCreator(){\n    const [taskName, setTaskName] = useState('');\n    const [newType, setNewType] = useState('');\n    const [user, todos, types, setTodos, setTypes] = useStateValue();\n\n    const handleChangeOnTask = (e) => setTaskName(e.target.value);\n    const handleChangeOnType = (e) => setNewType(e.target.value);\n\n    const saveTask = (e) => {\n       e.preventDefault();\n       console.log('saveTask');\n       console.log(e);\n       console.log(e.target);\n       console.log(e.target?.name.value);\n       console.log(e.target?.type.value);\n\n        db.collection('todos').doc(user).collection('todos')\n        .add({\n            name: e.target.name.value,\n            type: e.target.type.value,\n            completed: false,\n            createdTimestamp: firebase.firestore.FieldValue.serverTimestamp(),\n        })\n\n        if (newType && !types.includes(newType)){\n            db.collection('types')\n            .add({\n                name: e.target.type.value.toLowerCase(),\n            })\n        }\n\n        setTaskName('')\n        setNewType('')\n\n    }\n\n    const handleDebug = (e) => {\n        e.preventDefault();\n        console.log('types', types);\n    }\n\n    return (\n        <div className='todocreator'>\n            <form onSubmit={(e) => saveTask(e)}>\n                <div className='todocreator__section'>\n                    <label for='newTask'>New Task:</label>\n                    <input\n                        value={taskName}\n                        onChange={handleChangeOnTask}\n                        type='text'\n                        id='newTask'\n                        name='name'\n                        placeholder='Write your task'\n                    />\n                </div>\n                <div className='todocreator__section'>\n                    <Type\n                        show_input={true}\n                        type={newType}\n                        setType={setNewType}\n                        types={types}\n                        extra_types={[{name:''}]}\n                    />\n                </div>\n                <button type='submit'>Add task</button>\n            </form>\n        </div>\n    )\n}\n\nexport default TodoCreator;\n","/home/jaea/Programacion/JS/todox/src/StateProvider.js",["62","63"],"/home/jaea/Programacion/JS/todox/src/firebase.js",[],"/home/jaea/Programacion/JS/todox/src/Type.js",["64"],"import React, {useState} from 'react';\nimport db from './firebase';\n\nfunction Type ({show_input, type, label, setType, types, extra_types}){\n\n    const [type_, setType_] = useState(type)\n    const handleInputChange = (e) => {\n        setType(e.target.value);\n        console.log(types)\n        console.log(e.target.value);\n        console.log(types.includes(e.target.value))\n        console.log(types.includes('ocio'))\n        console.log('ocio' === e.target.value)\n        let exist_type = types.some(type => type.name === e.target.value)\n        if (exist_type){\n            setType_(e.target.value)\n        }\n        else{\n            setType_('');\n        }\n    }\n    const handleSelectChange = (e) => {\n        setType(e.target.value)\n        setType_(e.target.value)\n    }\n\n    return (\n        <div className='type'>\n            <label for='type'>{label || 'Type'}:</label>\n            <input id='type' name='type' type={show_input?'text':'hidden'} placeholder={type} value={type} onChange={handleInputChange}/>\n            <select id='types' onChange={handleSelectChange} value={type_}>\n                {extra_types.map((type, i) =>  <option key={i} value={type.name}>{type.name}</option>)}\n                {types.map((type, i) =>  <option key={i} value={type.name}>{type.name}</option>)}\n            </select>\n        </div>\n    )\n}\n\nexport default Type","/home/jaea/Programacion/JS/todox/src/Login.js",["65"],"import React, {useState} from 'react';\nimport './Login.css'\nimport {useStateValue} from './StateProvider'\nimport {auth, provider} from './firebase'\n\n\n\n\nfunction Login(){\n    const [user, setUser] = useStateValue()\n\n    const signIn = () => {\n        auth.signInWithPopup(provider)\n        .then((result) => {\n            setUser(result.user);\n            console.log('user: ', user);\n        })\n        .catch((error) => {\n            console.log('Authentication error');\n        })\n    }\n\n    return (\n        <div className='login'>\n             <div className='login__container'>\n                <img\n                    src='https://cdn.pixabay.com/photo/2020/01/21/18/39/todo-4783676_960_720.png'\n                    alt='todo logo'\n                />\n                <div className='login__text'>\n                    <h1>Sign in to ToDoApp</h1>\n                </div>\n                <button\n                    onClick={signIn}\n                >\n                    Sign in with Google\n                </button>\n            </div>\n        </div>\n    )\n}\n\nexport default Login;",{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":11,"column":15,"nodeType":"72","messageId":"73","endLine":11,"endColumn":20},{"ruleId":"70","severity":1,"message":"74","line":11,"column":29,"nodeType":"72","messageId":"73","endLine":11,"endColumn":37},{"ruleId":"75","severity":1,"message":"76","line":28,"column":7,"nodeType":"77","endLine":28,"endColumn":9,"suggestions":"78"},{"ruleId":"70","severity":1,"message":"79","line":12,"column":42,"nodeType":"72","messageId":"73","endLine":12,"endColumn":50},{"ruleId":"75","severity":1,"message":"80","line":28,"column":7,"nodeType":"77","endLine":28,"endColumn":9,"suggestions":"81"},{"ruleId":"70","severity":1,"message":"82","line":35,"column":10,"nodeType":"72","messageId":"73","endLine":35,"endColumn":22},{"ruleId":"70","severity":1,"message":"83","line":39,"column":11,"nodeType":"72","messageId":"73","endLine":39,"endColumn":24},{"ruleId":"70","severity":1,"message":"71","line":11,"column":18,"nodeType":"72","messageId":"73","endLine":11,"endColumn":23},{"ruleId":"70","severity":1,"message":"74","line":11,"column":32,"nodeType":"72","messageId":"73","endLine":11,"endColumn":40},{"ruleId":"70","severity":1,"message":"79","line":11,"column":42,"nodeType":"72","messageId":"73","endLine":11,"endColumn":50},{"ruleId":"70","severity":1,"message":"84","line":14,"column":11,"nodeType":"72","messageId":"73","endLine":14,"endColumn":29},{"ruleId":"70","severity":1,"message":"85","line":44,"column":11,"nodeType":"72","messageId":"73","endLine":44,"endColumn":22},{"ruleId":"70","severity":1,"message":"86","line":2,"column":8,"nodeType":"72","messageId":"73","endLine":2,"endColumn":10},{"ruleId":"70","severity":1,"message":"87","line":8,"column":19,"nodeType":"72","messageId":"73","endLine":8,"endColumn":26},{"ruleId":"70","severity":1,"message":"86","line":2,"column":8,"nodeType":"72","messageId":"73","endLine":2,"endColumn":10},{"ruleId":"70","severity":1,"message":"88","line":1,"column":16,"nodeType":"72","messageId":"73","endLine":1,"endColumn":24},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"no-unused-vars","'todos' is assigned a value but never used.","Identifier","unusedVar","'setTodos' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setTypes' and 'types'. Either include them or remove the dependency array.","ArrayExpression",["91"],"'setTypes' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'setTodos' and 'user'. Either include them or remove the dependency array.",["92"],"'handleChange' is assigned a value but never used.","'handleChange_' is assigned a value but never used.","'handleChangeOnType' is assigned a value but never used.","'handleDebug' is assigned a value but never used.","'db' is defined but never used.","'setUser' is assigned a value but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"93","fix":"94"},{"desc":"95","fix":"96"},"Update the dependencies array to be: [setTypes, types]",{"range":"97","text":"98"},"Update the dependencies array to be: [setTodos, user]",{"range":"99","text":"100"},[680,682],"[setTypes, types]",[739,741],"[setTodos, user]"]