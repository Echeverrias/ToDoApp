[{"/home/jaea/Programacion/JS/todox/src/index.js":"1","/home/jaea/Programacion/JS/todox/src/App.js":"2","/home/jaea/Programacion/JS/todox/src/reportWebVitals.js":"3","/home/jaea/Programacion/JS/todox/src/components/StateProvider.js":"4","/home/jaea/Programacion/JS/todox/src/components/TodoCreator/TodoCreator.js":"5","/home/jaea/Programacion/JS/todox/src/components/Type/Type.js":"6","/home/jaea/Programacion/JS/todox/src/firebase/firebase.js":"7","/home/jaea/Programacion/JS/todox/src/firebase/firebaseConfig.js":"8","/home/jaea/Programacion/JS/todox/src/components/SelectInputForm/SelectInputForm.js":"9","/home/jaea/Programacion/JS/todox/src/components/TodoList/TodoList.js":"10","/home/jaea/Programacion/JS/todox/src/components/TodoList/Todo/Todo.js":"11","/home/jaea/Programacion/JS/todox/src/components/Login/Login.js":"12"},{"size":606,"mtime":1611864672463,"results":"13","hashOfConfig":"14"},{"size":946,"mtime":1611865353091,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1608062983367,"results":"16","hashOfConfig":"14"},{"size":729,"mtime":1611865197819,"results":"17","hashOfConfig":"14"},{"size":2543,"mtime":1611865078833,"results":"18","hashOfConfig":"14"},{"size":707,"mtime":1611865121983,"results":"19","hashOfConfig":"14"},{"size":310,"mtime":1611864834247,"results":"20","hashOfConfig":"14"},{"size":385,"mtime":1611864834136,"results":"21","hashOfConfig":"14"},{"size":1436,"mtime":1611865209652,"results":"22","hashOfConfig":"14"},{"size":2609,"mtime":1611865134616,"results":"23","hashOfConfig":"14"},{"size":3294,"mtime":1611865178234,"results":"24","hashOfConfig":"14"},{"size":1097,"mtime":1611865334606,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"apjo2v",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/jaea/Programacion/JS/todox/src/index.js",[],["56","57"],"/home/jaea/Programacion/JS/todox/src/App.js",["58"],"/home/jaea/Programacion/JS/todox/src/reportWebVitals.js",[],"/home/jaea/Programacion/JS/todox/src/components/StateProvider.js",["59"],"import React, {createContext, useContext, useEffect, useState} from 'react';\n\nexport const StateContext = createContext();\n\nexport const StateProvider = ({children}) => {\n\n     const [user, setUser] = useState('kaine555');\n     const [todos, setTodos] = useState([]);\n     const [types, setTypes] = useState([]);\n     useEffect(() => {console.log('sss')})\n\n\n    return (\n        <StateContext.Provider value={\n            {\n                user:user,\n                todos:todos,\n                types:types,\n                setTodos:setTodos,\n                setTypes: setTypes\n            }\n        }>\n            {children}\n        </StateContext.Provider>\n    )\n}\n\nexport const useStateValue = () => useContext(StateContext);","/home/jaea/Programacion/JS/todox/src/components/TodoCreator/TodoCreator.js",["60","61","62"],"import React, {useState} from 'react';\nimport './TodoCreator.css';\nimport db from '../../firebase/firebase';\nimport firebase from 'firebase';\nimport {useStateValue} from '../StateProvider'\nimport Type from '../Type/Type'\n\nfunction TodoCreator(){\n    const [taskName, setTaskName] = useState('');\n    const [newType, setNewType] = useState('');\n    const {user, todos, setTodos} = useStateValue();\n\n    const handleChangeOnTask = (e) => setTaskName(e.target.value);\n    const handleChangeOnType = (e) => setNewType(e.target.value);\n\n    const handleTypeChange = (e) => {\n        setNewType(e.target.value);\n    }\n    const saveTask = (e) => {\n       e.preventDefault();\n        db.collection('todos').doc(user).collection('todos')\n        .add({\n            name: e.target.name.value,\n            type: e.target.type.value,\n            completed: false,\n            createdTimestamp: firebase.firestore.FieldValue.serverTimestamp(),\n        })\n\n        db.collection('types').where('name', '==', newType.toLowerCase()).get()\n            .then(querySnapshot => {\n                if (querySnapshot.empty){\n                    db.collection('types')\n                        .add({\n                            name: e.target.type.value.toLowerCase(),\n                        })\n                }\n            })\n            .catch(error => console.log(error));\n        /*\n        if (newType && !types.includes(newType)){\n            db.collection('types')\n            .add({\n                name: e.target.type.value.toLowerCase(),\n            })\n        }\n        */\n        setTaskName('')\n    }\n\n    return (\n        <div className='todocreator'>\n            <form onSubmit={(e) => saveTask(e)}>\n                <div className='todocreator__section'>\n                    <label htmlFor='newTask'>New Task:</label>\n                    <input\n                        value={taskName}\n                        onChange={handleChangeOnTask}\n                        type='text'\n                        id='newTask'\n                        name='name'\n                        placeholder='Write your task'\n                    />\n                </div>\n                <div className='todocreator__section'>\n                    <Type\n                        show_input={true}\n                        extra_types={['']}\n                        handleTypeChange={handleTypeChange}\n                    />\n                </div>\n                <button type='submit'>Add task</button>\n            </form>\n        </div>\n    )\n}\n\nexport default TodoCreator;\n","/home/jaea/Programacion/JS/todox/src/components/Type/Type.js",["63"],"import React, {useState} from 'react';\nimport './Type.css';\nimport {useStateValue} from '../StateProvider';\nimport SelectInputForm from '../SelectInputForm/SelectInputForm';\n\nfunction Type ({show_input, defaultValue, extra_types, handleTypeChange}){\n\n    const {types} = useStateValue();\n    const id = 'type';\n    const label = 'Type';\n\n    return (\n        <div className='type'>\n            <SelectInputForm\n                id={id}\n                label={label}\n                show_input={true}\n                defaultValue={defaultValue}\n                options={[...extra_types, ...types]}\n                handleValueChange={handleTypeChange}\n            />\n        </div>\n    )\n}\n\nexport default Type","/home/jaea/Programacion/JS/todox/src/firebase/firebase.js",[],"/home/jaea/Programacion/JS/todox/src/firebase/firebaseConfig.js",[],"/home/jaea/Programacion/JS/todox/src/components/SelectInputForm/SelectInputForm.js",["64"],"import React, {useState, useEffect} from 'react';\nimport './SelectInputForm.css';\n\nfunction SelectInputForm ({id, label, show_input, placeholder, defaultValue, options, handleValueChange}){\n\n    const [input, setInput] = useState(defaultValue);\n    const [option, setOption] = useState(defaultValue);\n\n    const handleInputChange = (e) => {\n        setInput(e.target.value);\n        let exist_type = options.some(option => option === e.target.value);\n        if (exist_type){\n            setOption(e.target.value);\n        }\n        else{\n            setOption('');\n        }\n        handleValueChange(e);\n    }\n\n    const handleSelectChange = (e) => {\n        setInput(e.target.value);\n        setOption(e.target.value);\n        handleValueChange(e);\n    }\n\n    return (\n        <div className='selectInputForm'>\n            { label && (<label htmlFor={id}>{label}</label>)}\n            <input\n                id={id}\n                name='type'\n                type={show_input?'text':'hidden'}\n                placeholder={input}\n                value={input}\n                onChange={handleInputChange}\n            />\n            <select\n                id={id + 's'}\n                onChange={handleSelectChange}\n                value={option}\n            >\n                {options.map((option, i) =>  <option key={i} value={option}>{option}</option>)}\n            </select>\n        </div>\n    )\n}\n\nexport default SelectInputForm","/home/jaea/Programacion/JS/todox/src/components/TodoList/TodoList.js",["65","66"],"import React, {useEffect, useState} from 'react';\nimport {useStateValue} from '../StateProvider';\nimport SelectInputForm from '../SelectInputForm/SelectInputForm';\nimport './TodoList.css';\nimport Todo from './Todo/Todo';\nimport db from '../../firebase/firebase';\nimport firebase from 'firebase'\n\n\nfunction TodoList(){\n\n    const {user, todos, setTodos} = useStateValue();\n    const [filter, setFilter] = useState('all');\n\n     useEffect(() => {\n        const unsubscribe = db.collection('todos').doc(user).collection('todos').onSnapshot((snapshot) => {\n\n            setTodos(snapshot.docs.map((doc) => { return {\n               id: doc.id,\n               ...doc.data(),\n            }}));\n            }\n        );\n\n        return () => {\n            unsubscribe();\n        }\n   }, [])\n\n\n\n  // useEffect(() => setCurrentTodos(todos), []);\n\n\n   const handleFilterChange = (e) => {\n        setFilter(e.target.value);\n   }\n\n\n   const deleteCompletedTasks = (e) => {\n        console.log('deleting')\n        e.preventDefault();\n        let deletable_tasks = todos.filter((todo) => ((todo.type === filter) ||(filter === 'all') ||(filter === 'completed')) && todo.completed);\n\n        deletable_tasks.forEach((todo) => {\n            db.collection('todos').doc(user).collection('todos')\n                .doc(todo.id).delete()\n        })\n\n   }\n\n   const debug = (e) => {\n    e.preventDefault();\n    console.log('Debugging');\n\n   }\n    return (\n        <div className='todolist'>\n        <button onClick={debug}>Debug</button>\n        <div className='todolist__filter'>\n            <SelectInputForm\n                id={'filter'}\n                label={'Filter'}\n                show_input={false}\n                options={[\n                    'all',\n                    'completed',\n                    'not completed',\n                    ...Array.from(new Set(todos.map(todo => todo.type))).sort(),\n                ]}\n                handleValueChange={handleFilterChange}\n            />\n        </div>\n        <div className='todolist__list__tasks'>\n            { todos.filter((todo) =>\n                (todo.type === filter) ||\n                (filter === 'not completed' && !todo.completed) ||\n                (filter === 'completed' && todo.completed) ||\n                (filter === 'all')\n              ).map((todo) =>\n                 <Todo key={todo.id} todo={todo}/>\n               )\n            }\n\n        </div>\n         <div className='todolist__delete'>\n            <button onClick={deleteCompletedTasks}>Delete completed tasks</button>\n         </div>\n        </div>\n    )\n}\n\n//\nexport default TodoList;\n\n","/home/jaea/Programacion/JS/todox/src/components/TodoList/Todo/Todo.js",[],"/home/jaea/Programacion/JS/todox/src/components/Login/Login.js",["67"],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":21,"column":7,"nodeType":"74","endLine":21,"endColumn":9,"suggestions":"75"},{"ruleId":"76","severity":1,"message":"77","line":7,"column":19,"nodeType":"78","messageId":"79","endLine":7,"endColumn":26},{"ruleId":"76","severity":1,"message":"80","line":11,"column":18,"nodeType":"78","messageId":"79","endLine":11,"endColumn":23},{"ruleId":"76","severity":1,"message":"81","line":11,"column":25,"nodeType":"78","messageId":"79","endLine":11,"endColumn":33},{"ruleId":"76","severity":1,"message":"82","line":14,"column":11,"nodeType":"78","messageId":"79","endLine":14,"endColumn":29},{"ruleId":"76","severity":1,"message":"83","line":1,"column":16,"nodeType":"78","messageId":"79","endLine":1,"endColumn":24},{"ruleId":"76","severity":1,"message":"84","line":1,"column":26,"nodeType":"78","messageId":"79","endLine":1,"endColumn":35},{"ruleId":"76","severity":1,"message":"85","line":7,"column":8,"nodeType":"78","messageId":"79","endLine":7,"endColumn":16},{"ruleId":"72","severity":1,"message":"86","line":28,"column":7,"nodeType":"74","endLine":28,"endColumn":9,"suggestions":"87"},{"ruleId":"76","severity":1,"message":"83","line":1,"column":16,"nodeType":"78","messageId":"79","endLine":1,"endColumn":24},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setTypes'. Either include it or remove the dependency array.","ArrayExpression",["90"],"no-unused-vars","'setUser' is assigned a value but never used.","Identifier","unusedVar","'todos' is assigned a value but never used.","'setTodos' is assigned a value but never used.","'handleChangeOnType' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'firebase' is defined but never used.","React Hook useEffect has missing dependencies: 'setTodos' and 'user'. Either include them or remove the dependency array.",["91"],"no-global-assign","no-unsafe-negation",{"desc":"92","fix":"93"},{"desc":"94","fix":"95"},"Update the dependencies array to be: [setTypes]",{"range":"96","text":"97"},"Update the dependencies array to be: [setTodos, user]",{"range":"98","text":"99"},[634,636],"[setTypes]",[780,782],"[setTodos, user]"]